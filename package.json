{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@types/jest": "^23.3.10",
    "@types/node": "^10.12.18",
    "@types/react": "^16.7.18",
    "@types/react-dom": "^16.0.11",
    "@types/styled-components": "^4.1.4",
    "apollo-boost": "^0.1.23",
    "graphql": "^14.0.2",
    "http-proxy-middleware": "^0.19.1",
    "node-sass": "^4.11.0",
    "react": "^16.7.0",
    "react-apollo": "^2.3.3",
    "react-dom": "^16.7.0",
    "react-scripts": "2.1.2",
    "styled-components": "^4.1.3",
    "typescript": "^3.2.2"
  },
  "scripts": {
    "start-frontend": "BROWSER=NONE PORT=8080 react-scripts start",
    "build-frontend": "react-scripts build",
    "test-frontend": "react-scripts test",
    "start-backend": "docker start redis timescaledb && RUST_BACKTRACE=1 systemfd --no-pid -s http::8081 -- cargo --color always watch -x 'run --bin qs-web' -w src/backend",
    "build-backend": "cargo build",
    "clean-backend": "rm -rf target",
    "format-backend": "cargo fmt",
    "format-frontend": "",
    "fmt": "concurrently -n \"frontend,backend\" \"npm run format-frontend\" \"npm run format-backend\"",
    "migrate": "diesel migrations run",
    "dropdb": "diesel database reset",
    "start": "concurrently -n \"frontend,backend\" \"npm run start-frontend --color\" \"npm run start-backend\"",
    "build": "npm run build-backend && npm run build-frontend",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "proxy": "http://localhost:8081",
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ],
  "devDependencies": {
    "concurrently": "^4.1.0"
  }
}
